{"ast":null,"code":"var _jsxFileName = \"/home/bstudent/dev/teamate-react/front/src/Components/ProgressIndicator.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n_c = Container;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    \"& > * + *\": {\n      marginLeft: theme.spacing(2)\n    }\n  }\n}));\n\nconst CircularDeterminate = () => {\n  _s();\n\n  const classes = useStyles();\n  const [progress, setProgress] = React.useState(0);\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setProgress(prevProgress => prevProgress >= 100 ? 0 : prevProgress + 10);\n    }, 800);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        variant: \"determinate\",\n        value: progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CircularDeterminate, \"MJ88ZWEaTMbo2OdC/u5Pa4jMKfE=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = CircularDeterminate;\nexport default CircularDeterminate;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"CircularDeterminate\");","map":{"version":3,"sources":["/home/bstudent/dev/teamate-react/front/src/Components/ProgressIndicator.js"],"names":["React","useEffect","makeStyles","CircularProgress","styled","Container","div","useStyles","theme","root","display","marginLeft","spacing","CircularDeterminate","classes","progress","setProgress","useState","timer","setInterval","prevProgress","clearInterval"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,SAAS,GAAGD,MAAM,CAACE,GAAI;AAC7B;AACA;AACA;AACA;AACA,CALA;KAAMD,S;AAON,MAAME,SAAS,GAAGL,UAAU,CAAEM,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJ,iBAAa;AACXC,MAAAA,UAAU,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AADD;AAFT;AADiC,CAAZ,CAAD,CAA5B;;AASA,MAAMC,mBAAmB,GAAG,MAAM;AAAA;;AAChC,QAAMC,OAAO,GAAGP,SAAS,EAAzB;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BhB,KAAK,CAACiB,QAAN,CAAe,CAAf,CAAhC;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,KAAK,GAAGC,WAAW,CAAC,MAAM;AAC9BH,MAAAA,WAAW,CAAEI,YAAD,IACVA,YAAY,IAAI,GAAhB,GAAsB,CAAtB,GAA0BA,YAAY,GAAG,EADhC,CAAX;AAGD,KAJwB,EAItB,GAJsB,CAAzB;AAMA,WAAO,MAAM;AACXC,MAAAA,aAAa,CAACH,KAAD,CAAb;AACD,KAFD;AAGD,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACE,QAAC,SAAD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAEJ,OAAO,CAACL,IAAxB;AAAA,6BACE,QAAC,gBAAD;AAAkB,QAAA,OAAO,EAAC,aAA1B;AAAwC,QAAA,KAAK,EAAEM;AAA/C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAvBD;;GAAMF,mB;UACYN,S;;;MADZM,mB;AAyBN,eAAeA,mBAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    \"& > * + *\": {\n      marginLeft: theme.spacing(2),\n    },\n  },\n}));\n\nconst CircularDeterminate = () => {\n  const classes = useStyles();\n  const [progress, setProgress] = React.useState(0);\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setProgress((prevProgress) =>\n        prevProgress >= 100 ? 0 : prevProgress + 10\n      );\n    }, 800);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  return (\n    <Container>\n      <div className={classes.root}>\n        <CircularProgress variant=\"determinate\" value={progress} />\n      </div>\n    </Container>\n  );\n};\n\nexport default CircularDeterminate;\n"]},"metadata":{},"sourceType":"module"}