[{"/home/bstudent/dev/teamate-react/front/src/index.js":"1","/home/bstudent/dev/teamate-react/front/src/Components/App.js":"2","/home/bstudent/dev/teamate-react/front/src/Components/Router.js":"3","/home/bstudent/dev/teamate-react/front/src/Components/Header.js":"4","/home/bstudent/dev/teamate-react/front/src/Routes/Home/index.js":"5","/home/bstudent/dev/teamate-react/front/src/Routes/Project/index.js":"6","/home/bstudent/dev/teamate-react/front/src/Routes/Mate/index.js":"7","/home/bstudent/dev/teamate-react/front/src/Routes/Home/HomeContainer.js":"8","/home/bstudent/dev/teamate-react/front/src/Routes/Home/HomePresenter.js":"9","/home/bstudent/dev/teamate-react/front/src/Components/GlobalStyles.js":"10","/home/bstudent/dev/teamate-react/front/src/Components/ProgressIndicator.js":"11","/home/bstudent/dev/teamate-react/front/src/Routes/Project/ProjectContainer.js":"12","/home/bstudent/dev/teamate-react/front/src/Routes/Mate/MateContainer.js":"13","/home/bstudent/dev/teamate-react/front/src/Routes/Project/ProjectPresenter.js":"14","/home/bstudent/dev/teamate-react/front/src/Routes/Mate/MatePresenter.js":"15","/home/bstudent/dev/teamate-react/front/src/Routes/Login/index.js":"16","/home/bstudent/dev/teamate-react/front/src/Routes/Login/LoginContainer.js":"17","/home/bstudent/dev/teamate-react/front/src/Routes/Login/LoginPresenter.js":"18","/home/bstudent/dev/teamate-react/front/src/api.js":"19","/home/bstudent/dev/teamate-react/front/src/Components/Modal.js":"20","/home/bstudent/dev/teamate-react/front/src/Components/Portal.js":"21","/home/bstudent/dev/teamate-react/front/src/Components/CloseButton.js":"22","/home/bstudent/dev/teamate-react/front/src/Routes/Join/index.js":"23","/home/bstudent/dev/teamate-react/front/src/Routes/Join/JoinContainer.js":"24","/home/bstudent/dev/teamate-react/front/src/Routes/Join/JoinPresenter.js":"25","/home/bstudent/dev/teamate-react/front/src/Components/ProjectCard.js":"26","/home/bstudent/dev/teamate-react/front/src/Components/Footer.js":"27","/home/bstudent/dev/teamate-react/front/src/Routes/MateDetail/index.js":"28","/home/bstudent/dev/teamate-react/front/src/Routes/MateDetail/MateDetailContainer.js":"29","/home/bstudent/dev/teamate-react/front/src/Routes/MateDetail/MateDetailPresenter.js":"30","/home/bstudent/dev/teamate-react/front/src/Components/MateCard.js":"31","/home/bstudent/dev/teamate-react/front/src/Routes/ProjectDetail/index.js":"32","/home/bstudent/dev/teamate-react/front/src/Routes/ProjectDetail/ProjectDetailContainer.js":"33","/home/bstudent/dev/teamate-react/front/src/Routes/ProjectDetail/ProjectDetailPresenter.js":"34","/home/bstudent/dev/teamate-react/front/src/Components/DropdownMenu.js":"35"},{"size":206,"mtime":1630651448510,"results":"36","hashOfConfig":"37"},{"size":289,"mtime":1630764566104,"results":"38","hashOfConfig":"37"},{"size":1075,"mtime":1631152340065,"results":"39","hashOfConfig":"37"},{"size":4171,"mtime":1631097706373,"results":"40","hashOfConfig":"37"},{"size":75,"mtime":1630647510795,"results":"41","hashOfConfig":"37"},{"size":85,"mtime":1630723853795,"results":"42","hashOfConfig":"37"},{"size":76,"mtime":1630723847639,"results":"43","hashOfConfig":"37"},{"size":1069,"mtime":1631002259797,"results":"44","hashOfConfig":"37"},{"size":5702,"mtime":1630946287417,"results":"45","hashOfConfig":"37"},{"size":2691,"mtime":1630948056196,"results":"46","hashOfConfig":"37"},{"size":748,"mtime":1632971278850,"results":"47","hashOfConfig":"37"},{"size":1561,"mtime":1632971964145,"results":"48","hashOfConfig":"37"},{"size":1762,"mtime":1632971904116,"results":"49","hashOfConfig":"37"},{"size":850,"mtime":1632972011905,"results":"50","hashOfConfig":"37"},{"size":870,"mtime":1632970684281,"results":"51","hashOfConfig":"37"},{"size":78,"mtime":1630742714525,"results":"52","hashOfConfig":"37"},{"size":1482,"mtime":1631156185018,"results":"53","hashOfConfig":"37"},{"size":1861,"mtime":1631151140097,"results":"54","hashOfConfig":"37"},{"size":1384,"mtime":1631786929516,"results":"55","hashOfConfig":"37"},{"size":2572,"mtime":1631171359000,"results":"56","hashOfConfig":"37"},{"size":281,"mtime":1630755571443,"results":"57","hashOfConfig":"37"},{"size":0,"mtime":1630755794226,"results":"58","hashOfConfig":"37"},{"size":75,"mtime":1630742380253,"results":"59","hashOfConfig":"37"},{"size":2020,"mtime":1631153702455,"results":"60","hashOfConfig":"37"},{"size":2331,"mtime":1630913111135,"results":"61","hashOfConfig":"37"},{"size":3521,"mtime":1630913101051,"results":"62","hashOfConfig":"37"},{"size":1418,"mtime":1632971177132,"results":"63","hashOfConfig":"37"},{"size":94,"mtime":1630850714430,"results":"64","hashOfConfig":"37"},{"size":771,"mtime":1630949114990,"results":"65","hashOfConfig":"37"},{"size":4770,"mtime":1631002840286,"results":"66","hashOfConfig":"37"},{"size":1975,"mtime":1631013274497,"results":"67","hashOfConfig":"37"},{"size":103,"mtime":1630852930827,"results":"68","hashOfConfig":"37"},{"size":822,"mtime":1631000540729,"results":"69","hashOfConfig":"37"},{"size":4521,"mtime":1631002668716,"results":"70","hashOfConfig":"37"},{"size":801,"mtime":1630949955370,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"bc4mnr",{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"74"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"74"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"74"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"74"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"74"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"74"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"74"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"/home/bstudent/dev/teamate-react/front/src/index.js",[],["157","158"],"/home/bstudent/dev/teamate-react/front/src/Components/App.js",[],"/home/bstudent/dev/teamate-react/front/src/Components/Router.js",["159","160"],"import React, { useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport Header from \"Components/Header\";\nimport Footer from \"Components/Footer\";\n\nimport Home from \"Routes/Home\";\nimport Mate from \"Routes/Mate\";\nimport MateDetail from \"Routes/MateDetail\";\nimport Project from \"Routes/Project\";\nimport Login from \"Routes/Login\";\nimport ProjectDetail from \"Routes/ProjectDetail\";\n\nconst router = () => {\n  return (\n    <Router>\n      <>\n        <Header />\n        <Switch>\n          <Route path=\"/\" exact component={Home}></Route>\n\n          <Route path=\"/mate\" exact component={Mate}></Route>\n          <Route path=\"/mate/:id\" component={MateDetail}></Route>\n\n          <Route path=\"/project\" exact component={Project}></Route>\n          <Route path=\"/project/:id\" component={ProjectDetail}></Route>\n\n          {/* <Route path=\"/login\" component={Login}></Route> */}\n          <Redirect from=\"*\" to=\"/\"></Redirect>\n        </Switch>\n        <Footer />\n      </>\n    </Router>\n  );\n};\n\nexport default router;\n","/home/bstudent/dev/teamate-react/front/src/Components/Header.js",[],"/home/bstudent/dev/teamate-react/front/src/Routes/Home/index.js",[],"/home/bstudent/dev/teamate-react/front/src/Routes/Project/index.js",[],"/home/bstudent/dev/teamate-react/front/src/Routes/Mate/index.js",[],"/home/bstudent/dev/teamate-react/front/src/Routes/Home/HomeContainer.js",["161","162"],"import React, { useEffect, useState } from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport reset from \"styled-reset\";\nimport \"./Home.css\";\nimport { mateAPI, projectAPI } from \"api\";\n\nconst ROW_COUNT = 6;\n\nconst HomeContainer = () => {\n  const [loading, setLoading] = useState(true);\n  const [status, setStatus] = useState(0);\n  const [error, setError] = useState(\"\");\n  const [projects, setProjects] = useState([]);\n  const [mates, setMates] = useState([]);\n\n  useEffect(async () => {\n    try {\n      setLoading(true);\n      const {\n        data: { projects },\n      } = await projectAPI.getProjectsByStatusAndRange(status, ROW_COUNT);\n      const {\n        data: { mates },\n      } = await mateAPI.getMates(ROW_COUNT);\n      setProjects(projects);\n      setMates(mates);\n    } catch {\n      setError(\"Projects를 찾을 수 없습니다.\");\n    } finally {\n      setLoading(false);\n    }\n  }, [status]);\n\n  return <HomePresenter setStatus={setStatus} loading={loading} error={error} projects={projects} mates={mates} />;\n};\n\nexport default HomeContainer;\n","/home/bstudent/dev/teamate-react/front/src/Routes/Home/HomePresenter.js",["163","164"],"import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport ProgressIndicator from \"Components/ProgressIndicator\";\nimport Slider from \"react-slick\";\nimport ProjectCard from \"Components/ProjectCard\";\nimport MateCard from \"Components/MateCard\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 48px;\n  }\n  display: grid;\n  // 화면 크기에 맞춰서 컬럼수 자동으로 채워줌\n  grid-template-columns: repeat(auto-fit, minmax(410px, auto));\n\tjustify-items: center; \n  text-align: center;\n`;\n\nconst Section = styled.div`\n  width: 100%;\n  margin: 0px auto;\n  background-color: #fafafa;\n  text-align: center;\n  padding: 15px 80px 50px;\n`\n\nconst SectionTitle = styled.div`\n  text-align: left;\n  margin: 30px 20px 50px;\n  font-size: 17px;\n  font-weight: 700;\n`\n\nconst Copy = styled.div`\n  width: 100%;\n  margin: 0px auto;\n  background-color: #fafafa;\n  text-align: center;\n  background-color: #2AC1BC;\n  padding: 100px 0px;\n  margin-bottom: 0px !important;\n`\n\nconst CopySubtitle = styled.div`\n  color: #ffffff;\n  font-weight: 700;\n`\n\nconst CopyTitle = styled.div`\n  color: #565656;\n  margin: 20px 0px;\n  font-size: 22px;\n  font-weight: 700;\n`\n\nconst CopyDesc = styled.div`\n  margin: 14px 0px 30px;  \n  font-size: 15px;\n  line-height: 35px;\n`\nconst StartBtn = styled.span`\n  background: #ffffff;\n  box-shadow: 0 2px 3px 0 rgb(0 0 0 / 30%);\n  border-radius: 30px;\n  font-size: 13px;\n  font-weight: 700;\n  width: 180px;\n  height: 45px;\n  line-height: 45px;\n  display: inline-block;\n  cursor: pointer;\n`\nconst IconWrapper = styled.div`\n  justify-content: space-around;\n  display: flex;\n\n`\nconst IconContainer = styled.div`\n  text-align: center;\n`\n\nconst Icon = styled.div`\n  font-size: 50px;\n`\n\nconst IconTitle = styled.div`\n  font-size: 18px;\n  margin-top: 30px;\n  font-weight: 700;\n\n`\nconst IconDesc = styled.div`\n  font-size: 14px;\n  padding: 0 80px;\n  margin-top: 20px;\n  line-height: 20px;\n`\nconst ImageContainer = styled.div`\n  height: 100vh;\n`;\n\nconst Image = styled.img`\n  max-height: 100%;\n  max-width: 100%;\n  width: 100%;\n  object-fit: fill;\n`\nconst HomePresenter = ({ loading, projects, mates }) => {\n  const settings = {\n    dots: true,\n    infinite: true,\n    lazyLoad: true,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    vertical: true,\n    verticalSwiping: true,\n    swipeToSlide: true,\n    autoplay : true,\t\t\t// 자동 스크롤 사용 여부\n    autoplaySpeed : 10000, \t\t// 자동 스크롤 시 다음으로 넘어가는데 걸리는 시간 (ms)\n    pauseOnHover: true, // 마우스 올렸을 때 autoplay 멈춤\n    dotsClass: \"slick-dots\",\n    beforeChange: function (currentSlide, nextSlide) {\n      console.log(\"before change\", currentSlide, nextSlide);\n    },\n    afterChange: function (currentSlide) {\n      console.log(\"after change\", currentSlide);\n    }\n  }\n\n  const images = [\n    \"picture1.jpg\", \"picture2.jpg\",\"picture3.jpg\"\n  ];\n\n  return (\n    <>\n      <Helmet>\n        <title>Teamate </title>\n      </Helmet>\n      <Slider {...settings}>\n        {images.map((image, index) => {\n          const src = require(`assets/${image}`).default;\n          return (<div style=\"height: calc(100vh - 56px);\" key={index}>\n            <ImageContainer>\n              <Image src={src} />\n            </ImageContainer>\n          </div>);\n        })}\n      </Slider>\n\n      <Section>\n        <SectionTitle>\n          서비스 소개\n        </SectionTitle>\n\n        <IconWrapper>\n          <IconContainer>\n            <Icon><i class=\"far fa-address-card\"></i> </Icon>\n            <IconTitle> 메이트 등록 </IconTitle>\n            <IconDesc>시들어 가는 노년에게서 구하지 못할 바이며 오직 우리 청춘에서만 구할 수 있는 것이다.  </IconDesc>\n          </IconContainer>\n\n          <IconContainer>\n            <Icon><i class=\"fab fa-angellist\"></i> </Icon>\n            <IconTitle> 프로젝트 모집 </IconTitle>\n            <IconDesc>시들어 가는 노년에게서 구하지 못할 바이며 오직 우리 청춘에서만 구할 수 있는 것이다.  </IconDesc>\n          </IconContainer>\n\n          <IconContainer>\n            <Icon><i class=\"far fa-star\"></i> </Icon>\n            <IconTitle> 별점 주기 </IconTitle>\n            <IconDesc>시들어 가는 노년에게서 구하지 못할 바이며 오직 우리 청춘에서만 구할 수 있는 것이다.  </IconDesc>\n          </IconContainer>\n        </IconWrapper>\n\n      </Section>\n      <Copy>\n        <CopySubtitle>\n          Start With Teamate\n        </CopySubtitle>\n        <CopyTitle>\n          Hyperledger Fabric\n        </CopyTitle>\n        <CopyDesc>\n          대충 블록체인 왜 쓰는지 어떻게 썼는지 쓰면 뭐가 좋은지 설명  <br />\n          시들어 가는 노년에게서 구하지 못할 바이며 오직 우리 청춘에서만 구할 수 있는 것이다 청춘은 인생의 황금시대다\n        </CopyDesc>\n        <StartBtn> Start Now </StartBtn>\n      </Copy>\n\n      <Section>\n        <SectionTitle>\n          기대되는 새로운 프로젝트\n        </SectionTitle>\n        <Container>\n          {projects && projects.length > 0 && projects.map((project) => (<ProjectCard {...project} />))}\n\n        </Container>\n      </Section>\n\n      <Section>\n        <SectionTitle>\n          이번 주 메이트 추천\n        </SectionTitle>\n        <Container>\n          {mates && mates.length > 0 && mates.map((mate) => (<MateCard {...mate} />))}\n        </Container>\n      </Section>\n\n      {/* </Container> */}\n      {loading ? <ProgressIndicator /> : <Container>{loading}</Container>}\n      {console.log(loading)}\n    </>\n  );\n};\nexport default HomePresenter;\n","/home/bstudent/dev/teamate-react/front/src/Components/GlobalStyles.js",[],"/home/bstudent/dev/teamate-react/front/src/Components/ProgressIndicator.js",["165"],"/home/bstudent/dev/teamate-react/front/src/Routes/Project/ProjectContainer.js",["166","167"],"/home/bstudent/dev/teamate-react/front/src/Routes/Mate/MateContainer.js",["168","169","170"],"/home/bstudent/dev/teamate-react/front/src/Routes/Project/ProjectPresenter.js",[],"/home/bstudent/dev/teamate-react/front/src/Routes/Mate/MatePresenter.js",[],"/home/bstudent/dev/teamate-react/front/src/Routes/Login/index.js",[],"/home/bstudent/dev/teamate-react/front/src/Routes/Login/LoginContainer.js",["171"],"import { mateAPI } from \"api\";\nimport React, { useEffect, useState } from \"react\";\nimport LoginPresenter from \"./LoginPresenter\";\n\nconst LoginContainer = ({ setIsMate, setModalOpen }) => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (email && password) {\n      login({ email, password });\n    }\n  };\n\n  const login = async () => {\n    try {\n      setLoading(true);\n      const { data } = await mateAPI.login({ email, password });\n      console.log(data);\n      if (data.status) {\n        alert(data.mate.name);\n        // localstorage\n        setModalOpen(false);\n      }\n    } catch {\n      setError(\"로그인 정보가 일치하지 않습니다.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const updateEmail = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setEmail(value);\n  };\n\n  const updatePassword = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setPassword(value);\n  };\n\n  const values = { email, password };\n  const update = { email: updateEmail, password: updatePassword };\n\n  return (\n    <LoginPresenter\n      loading={loading}\n      error={error}\n      values={values}\n      update={update}\n      handleSubmit={handleSubmit}\n      setIsMate={setIsMate}\n    />\n  );\n};\n\nexport default LoginContainer;\n","/home/bstudent/dev/teamate-react/front/src/Routes/Login/LoginPresenter.js",["172"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\n\nconst Button = styled.button`\n  display: block;\n  background-color: #565656;\n  color: #ffffff;\n  height: 58px;\n  border-radius: 4px;\n  margin-top: 7px;\n  font-size: 15px;\n  line-height: 58px;\n  width: 100%;\n  outline: none;\n  cursor: pointer;\n  border: 0;\n\n  &:hover {\n    background-color: #218c74;\n    transition-duration: 0.3s;\n  }\n`;\n\nconst Error = styled.div`\n  display: flex;\n  justify-content: center;\n  color: #e83442;\n  font-size: 1rem;\n`;\n\nconst SwitchContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  color: #a7a7a7;\n  margin-top: 1rem;\n  font-size: 0.8rem;\n`;\n\nconst Switch = styled.div`\n  margin-left: 1rem;\n\n  &:hover {\n    font-weight: bold;\n  }\n\n  transition-duration: 0.3s;\n`;\n\nconst LoginPresenter = ({\n  loading,\n  error,\n  values,\n  update,\n  handleSubmit,\n  setIsMate,\n}) => (\n  <>\n    <Helmet>\n      <title>Login | Teamate</title>\n    </Helmet>\n    <Error> {error} </Error>\n    <form onSubmit={handleSubmit}>\n      <input\n        className=\"inputMateInfo\"\n        onChange={update.email}\n        type=\"text\"\n        placeholder=\"이메일\"\n        value={values.email}\n      ></input>{\" \"}\n      <br />\n      <input\n        className=\"inputMateInfo\"\n        onChange={update.password}\n        type=\"password\"\n        placeholder=\"비밀번호\"\n        value={values.password}\n      ></input>{\" \"}\n      <SwitchContainer>\n        아직 회원이 아니신가요?\n        <Switch\n          onClick={() => {\n            setIsMate(false);\n          }}\n        >\n          {\" \"}\n          회원가입{\" \"}\n        </Switch>\n      </SwitchContainer>\n      <br />\n      <br />\n      <Button type=\"submit\"> 로그인하기 </Button>\n    </form>\n  </>\n);\n\nexport default LoginPresenter;\n","/home/bstudent/dev/teamate-react/front/src/api.js",[],"/home/bstudent/dev/teamate-react/front/src/Components/Modal.js",["173"],"import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nconst ModalContainer = styled.div`\n  display: ${(props) => (props.open ? \"flex\" : \"none\")};\n  align-items: center;\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 99;\n  background-color: rgba(0, 0, 0, 0.6);\n  animation: modal-bg-show 0.3s;\n  ${(props) => (props.open ? \"animation-direction: reverse\" : \"\")}\n\n  @keyframes modal-bg-show {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Modal = styled.section`\n  width: 90%;\n  height: fit-content;\n  max-width: 450px;\n  margin: 0 auto;\n  border-radius: 0.3rem;\n  background-color: #fff;\n  /* 팝업이 열릴때 스르륵 열리는 효과 */\n  animation: modal-show 0.3s;\n  overflow: hidden;\n\n  @keyframes modal-show {\n    from {\n      opacity: 0;\n      margin-top: -50px;\n    }\n    to {\n      opacity: 1;\n      margin-top: 0;\n    }\n  }\n`;\n\nconst Header = styled.header`\n  position: relative;\n  margin-top: 60px;\n  color: #3c3c3c;\n  font-weight: 900;\n  font-size: 18px;\n  text-align: center;\n`;\n\nconst CloseButton = styled.button`\n  margin-top: -40px;\n  position: absolute;\n  right: 20px;\n  width: 30px;\n  font-size: 25px;\n  font-weight: 700;\n  text-align: center;\n  color: #999;\n  background-color: transparent;\n  display: block;\n  outline: none;\n  cursor: pointer;\n  border: 0;\n`;\n\nconst Main = styled.main`\n  padding: 35px 35px 25px;\n`;\n\nconst ModalComponent = (props) => {\n  // 열기, 닫기, 모달 헤더 텍스트를 부모로부터 받아옴\n  const { modalOpen, setModalOpen, header } = props;\n\n  const modalCloseHandler = (e) => {};\n  // 모달이 떠있을때 뒷 영역의 스크롤이 내려가지 않게 막는 코드\n  useEffect(() => {\n    document.body.style.cssText = `position: fixed; top: -${window.scrollY}px`;\n    return () => {\n      const scrollY = document.body.style.top;\n      document.body.style.cssText = `position: \"\"; top: \"\";`;\n      window.scrollTo(0, parseInt(scrollY || \"0\") * -1);\n    };\n  }, []);\n\n  return (\n    // 모달이 열릴때 openModal 클래스가 생성된다.\n    <ModalContainer open={modalOpen}>\n      {modalOpen ? (\n        <Modal>\n          <Header>\n            <CloseButton\n              onClick={() => {\n                setModalOpen(false);\n              }}\n            >\n              {\" \"}\n              &times;{\" \"}\n            </CloseButton>\n            {header}\n          </Header>\n          <Main>{props.children}</Main>\n        </Modal>\n      ) : null}\n    </ModalContainer>\n  );\n};\n\nexport default ModalComponent;\n","/home/bstudent/dev/teamate-react/front/src/Components/Portal.js",[],["174","175"],"/home/bstudent/dev/teamate-react/front/src/Components/CloseButton.js",[],"/home/bstudent/dev/teamate-react/front/src/Routes/Join/index.js",[],"/home/bstudent/dev/teamate-react/front/src/Routes/Join/JoinContainer.js",["176"],"import { mateAPI } from \"api\";\nimport React, { useEffect, useState } from \"react\";\nimport JoinPresenter from \"./JoinPresenter\";\n\nconst JoinContainer = ({ setIsMate }) => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (\n      name &&\n      email &&\n      password &&\n      confirmPassword &&\n      password === confirmPassword\n    ) {\n      join({ email, password, name });\n    } else {\n      return () => setError(\"입력 값이 잘못되었습니다.\");\n    }\n  };\n\n  const join = async () => {\n    try {\n      setLoading(true);\n      const { data } = await mateAPI.join({\n        email,\n        password,\n        confirmPassword,\n        name,\n      });\n\n      if (!data.ok) {\n        setError(data.msg);\n        return;\n      }\n    } catch {\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const updateEmail = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setEmail(value);\n  };\n\n  const updatePassword = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setPassword(value);\n  };\n\n  const updateName = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setName(value);\n  };\n\n  const updateConfirmPassword = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setConfirmPassword(value);\n  };\n\n  const values = { email, password, confirmPassword, name };\n  const update = {\n    email: updateEmail,\n    password: updatePassword,\n    confirmPassword: updateConfirmPassword,\n    name: updateName,\n  };\n\n  return (\n    <JoinPresenter\n      loading={loading}\n      error={error}\n      values={values}\n      update={update}\n      handleSubmit={handleSubmit}\n      setIsMate={setIsMate}\n    />\n  );\n};\n\nexport default JoinContainer;\n","/home/bstudent/dev/teamate-react/front/src/Routes/Join/JoinPresenter.js",["177","178","179","180"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport ProgressIndicator from \"Components/ProgressIndicator\";\n\nconst Container = styled.div`\n  width: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n`;\n\nconst Button = styled.button`\n  display: block;\n  background-color: #565656;\n  color: #ffffff;\n  height: 58px;\n  border-radius: 4px; \n  margin-top: 7px;\n  font-size: 15px;\n  line-height: 58px;\n  width: 100%;  \n  outline: none;\n  cursor: pointer;\n  border: 0;\n\n  &:hover {\n      background-color: #218c74;\n      transition-duration: 0.3s\n    }\n`;\n\nconst Error = styled.div`\n  margin-top: 8px;\n  margin-bottom: 40px;\n  font-size: 14px;\n  color: #E83442;\n`;\n\n\nconst JoinPresenter = ({\n  loading,\n  error,\n  values,\n  update,\n  handleSubmit,\n  setIsMate,\n}) => (\n  <>\n    <Helmet>\n      <title>Join | Teamate</title>\n    </Helmet>\n    <div className=\"error_sign\"> {error} </div>\n    <form onSubmit={handleSubmit}>\n      <input\n        className=\"inputMateInfo\"\n        onChange={update.name}\n        type=\"text\"\n        placeholder=\"이름\"\n        value={values.name}\n      ></input>{\" \"}\n      <br />\n      <input\n        className=\"inputMateInfo\"\n        onChange={update.email}\n        type=\"text\"\n        placeholder=\"이메일\"\n        value={values.email}\n      ></input>{\" \"}\n      <br />\n      <input\n        className=\"inputMateInfo\"\n        onChange={update.password}\n        type=\"password\"\n        placeholder=\"비밀번호\"\n        value={values.password}\n      ></input>{\" \"}\n      <br />\n      <input\n        className=\"inputMateInfo\"\n        onChange={update.confirmPassword}\n        type=\"password\"\n        placeholder=\"비밀번호 확인\"\n        value={values.confirmPassword}\n      ></input>{\" \"}\n      <div className=\"checkMate\">\n        이미 회원이신가요?{\" \"}\n        <div\n          className=\"checkMateLink\"\n          onClick={() => {\n            setIsMate(true);\n          }}\n        >\n          {\" \"}\n          로그인으로 이동{\" \"}\n        </div>\n      </div>\n      <br />\n      <br />\n      <Button type=\"submit\">\n        {\" \"}\n        회원가입하기{\" \"}\n      </Button>\n    </form>\n  </>\n);\n\nexport default JoinPresenter;\n","/home/bstudent/dev/teamate-react/front/src/Components/ProjectCard.js",[],"/home/bstudent/dev/teamate-react/front/src/Components/Footer.js",["181"],"/home/bstudent/dev/teamate-react/front/src/Routes/MateDetail/index.js",[],"/home/bstudent/dev/teamate-react/front/src/Routes/MateDetail/MateDetailContainer.js",["182","183"],"import React, { useEffect, useState } from \"react\";\nimport MateDetailPresenter from \"./MateDetailPresenter\";\nimport { mateAPI } from \"api\";\n\nconst MateDetailContainer = ({\n  match: {\n    params: { id },\n  },\n}) => {\n  const [loading, setLoading] = useState(true);\n  const [mate, setMate] = useState();\n  const [error, setError] = useState(\"\");\n\n\n  useEffect(async () => {\n    try {\n      setLoading(true);\n      const {\n        data: { mate },\n      } = await mateAPI.getMateByID(id);\n      console.log(mate);\n      setMate(mate);\n    } catch {\n      setError(\"Mate를 찾을 수 없습니다.\");\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  return <MateDetailPresenter loading={loading} error={error} {...mate} />;\n};\n\nexport default MateDetailContainer;\n","/home/bstudent/dev/teamate-react/front/src/Routes/MateDetail/MateDetailPresenter.js",["184","185"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport ProgressIndicator from \"Components/ProgressIndicator\";\nimport ogu from \"assets/ogu.jpeg\";\nimport ProjectCard from \"Components/ProjectCard\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 48px;\n  }\n  display: grid;\n  // 화면 크기에 맞춰서 컬럼수 자동으로 채워줌\n  grid-template-columns: repeat(auto-fit, minmax(410px, auto));\n  justify-items: center;\n  text-align: center;\n`;\n\nconst MateSection = styled.div`\n  padding: 50px 200px;\n  justify-content: space-around;\n  display: flex;\n`;\n\nconst MateLeft = styled.div`\n  padding-right: 50px;\n`;\n\nconst MateRight = styled.div`\n  text-align: center;\n`;\n\nconst MateName = styled.div`\n  font-size: 26px;\n  font-weight: 400;\n`;\nconst MateRole = styled.div`\n  font-size: 14px;\n  color: #b1b1b1;\n  display: inline-block;\n  padding-left: 10px;\n`;\n\nconst MateRateNum = styled.span`\n  font-size: 17px;\n  font-weight: 100;\n`;\n\nconst MateRate = styled.span`\n  float: right;\n`;\n\nconst MateTags = styled.span`\n  float: left;\n  background-color: #2ac1bc;\n  padding: 2px 10px;\n  font-size: 12px;\n  color: white;\n  text-align: center;\n  border-radius: 15px;\n  margin-right: 7px;\n  margin-top: 10px;\n`;\n\nconst MateIntroduce = styled.p`\n  text-align: justify;\n  font-size: 14px;\n  line-height: 24px;\n  margin-top: 80px;\n`;\nconst MateProfile = styled.div`\n  background-color: lightgray;\n  border-radius: 90px;\n  overflow: hidden;\n  width: 160px;\n  height: 160px;\n  display: inline-block;\n  vertical-align: middle;\n  cursor: zoom-in;\n  margin-bottom: 20px;\n`;\n\nconst MateProfileEdit = styled.span`\n  color: #b1b1b1;\n  font-size: 12px;\n  cursor: pointer;\n`;\n\nconst MateProjectSection = styled.div`\n  padding: 50px 200px;\n`;\nconst MateProjectSectionTitle = styled.div`\n  margin: 30px 20px 50px;\n  font-size: 17px;\n  font-weight: 700;\n`;\n\nconst ProjectShowMore = styled.div`\n  text-align: center;\n`;\n\nconst MateDetailPresenter = ({ email, name, profile, role, introduce, tags, projects, rates }) => {\n  const onGoingProjects = projects && projects.length > 0 && projects.filter((project) => project.status === 1);\n\n  const terminatedProjects = projects && projects.length > 0 && projects.filter((project) => project.status === 2);\n\n  return (\n    <>\n      <MateSection>\n        <MateLeft>\n          <MateName>\n            {name}\n            <MateRole> {role} </MateRole>\n            <MateRate>\n              ⭐️ <MateRateNum>4.7</MateRateNum>\n            </MateRate>\n          </MateName>\n\n          {tags && tags.length > 0 && tags.map((tag) => <MateTags> #{tag} </MateTags>)}\n\n          <MateIntroduce>\n            안녕하세요 자기소개입니다. 많이 품고 있는 이상! 이것이야말로 무한한 가치를 가진 것이다 사람은 크고 작고 간에\n            이상이 있음으로써 용감하고 굳 세게 살 수 있는 것이다 석가는 무엇을 위하여 설산에서 고행을 하였으며 예수는\n            무엇을 위하여 광야에서 방황하였으며많이 품고 있는 이상! 이것이야말로 무한한 가치를 가진 것이다 사람은 크고\n            작고 간에 이상이 있음으로써 용감하고 굳세게 살 수 있는 것이다 석가는 무엇을 위하여 설산에서 고행을 하였으며\n            예수는 무엇을 위하여 광야에서 방황하였으며\n            <br />\n            <br />\n            - 망포고 2012.03.02~2015.02.12 <br />\n            - 아주대 2015.03.02~2021.02.22\n            <br />\n            {introduce}\n          </MateIntroduce>\n        </MateLeft>\n        <MateRight>\n          <MateProfile\n            style={{ backgroundImage: `url(${ogu})`, backgroundPositionX: \"-120px\", backgroundPositionY: \"-50px\" }}\n          >\n            {/* 프사 */}\n          </MateProfile>\n          <MateProfileEdit> 프로필 편집 </MateProfileEdit>\n        </MateRight>\n      </MateSection>\n\n      <MateProjectSection>\n        <MateProjectSectionTitle>진행중인 프로젝트</MateProjectSectionTitle>\n        <Container>\n          {onGoingProjects &&\n            onGoingProjects.length > 0 &&\n            onGoingProjects.map((project) => <ProjectCard {...project}></ProjectCard>)}\n        </Container>\n        <ProjectShowMore> 더보기 </ProjectShowMore>\n\n        <MateProjectSectionTitle>완료한 프로젝트</MateProjectSectionTitle>\n        <Container>\n          {terminatedProjects &&\n            terminatedProjects.length > 0 &&\n            terminatedProjects.map((project) => <ProjectCard {...project}></ProjectCard>)}\n        </Container>\n        <ProjectShowMore> 더보기 </ProjectShowMore>\n      </MateProjectSection>\n    </>\n  );\n};\n\nexport default MateDetailPresenter;\n","/home/bstudent/dev/teamate-react/front/src/Components/MateCard.js",["186"],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst MateCard = styled.div`\n  width: 410px;\n  height: 375px;\n  margin: 20px 15px;\n  position: relative;\n  vertical-align: top;\n  background-color: #ffffff;\n  display: inline-block;\n  text-align: left;\n  box-shadow: 0px 0px 30px #eee;\n  padding: 32px 35px;\n  box-sizing: border-box;\n`;\n\nconst MateRole = styled.div`\n  position: absolute;\n  right: 35px;\n  color: #979797;\n  font-size: 14px;\n  cursor: pointer;\n`;\n\nconst MateImage = styled.div`\n  // background\n  border-radius: 20px;\n  overflow: hidden;\n  width: 33px;\n  height: 33px;\n  display: inline-block;\n  vertical-align: middle;\n  cursor: pointer;\n`;\n\nconst MateName = styled.div`\n  margin-left: 8px;\n  font-size: 15px;\n  font-weight: 700;\n  color: #3c3c3c;\n  cursor: pointer;\n`;\n\nconst MateTags = styled.div`\n  font-size: 16px;\n  color: #3c3c3c;\n  cursor: pointer;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  margin-top: 30px;\n`;\n\nconst BottomSection = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 30px;\n  left: 0px;\n  bottom: 23px;\n  color: #707070;\n`;\nconst LastEdited = styled.div`\n  position: absolute;\n  top: 3px;\n  left: 30px;\n`;\n\nconst BookmarkIcon = styled.div`\n  position: absolute;\n  right: 28px;\n  top: 6px;\n  cursor: pointer;\n`;\n\nconst MateCardComponent = ({ _id, role, name, tags }) => {\n  return (\n    <Link to={`/mate/${_id}`}>\n      <MateCard>\n        <MateImage> </MateImage>\n        <MateRole> {role} </MateRole>\n        <MateName> {name} </MateName>\n        <MateTags>{tags && tags.length > 0 && tags.map((tag) => `#${tag} `)}</MateTags>\n        <BottomSection>\n          <LastEdited>3분 전 업데이트</LastEdited>\n          <BookmarkIcon>\n            {\" \"}\n            <i class=\"far fa-bookmark\"></i>{\" \"}\n          </BookmarkIcon>\n        </BottomSection>\n      </MateCard>\n    </Link>\n  );\n};\n\nexport default MateCardComponent;\n","/home/bstudent/dev/teamate-react/front/src/Routes/ProjectDetail/index.js",[],"/home/bstudent/dev/teamate-react/front/src/Routes/ProjectDetail/ProjectDetailContainer.js",["187","188"],"import React, { useEffect, useState } from \"react\";\nimport ProjectDetailPresenter from \"./ProjectDetailPresenter\";\nimport { projectAPI } from \"api\";\n\nconst ProjectDetailContainer = ({\n  match: {\n    params: { id },\n  },\n}) => {\n  const [loading, setLoading] = useState(true);\n  const [project, setProject] = useState(null);\n  const [error, setError] = useState(\"\");\n\n  useEffect(async () => {\n    try {\n      setLoading(true);\n      const {\n        data: { project },\n      } = await projectAPI.getProjectByID(id);\n      setProject(project);\n      console.log(project);\n    } catch {\n      setError(\"Project를 찾을 수 없습니다.\");\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  return <ProjectDetailPresenter loading={loading} error={error} {...project} />;\n};\n\nexport default ProjectDetailContainer;\n","/home/bstudent/dev/teamate-react/front/src/Routes/ProjectDetail/ProjectDetailPresenter.js",["189","190"],"import React from \"react\";\nimport styled from \"styled-components\";\n\nconst ProjectSection = styled.div`\n  padding: 50px 120px;\n`;\nconst ProjectTitle = styled.div`\n  font-size: 20px;\n  font-weight: 600;\n`;\n\nconst ProjectSub = styled.div`\n  margin-top: 15px;\n  display: flex;\n`;\n\nconst Divider = styled.div`\n  margin-top: 30px;\n  border-bottom: 0.1em solid #ddd;\n`;\n\nconst ProjectTags = styled.span`\n  flex-basis: 80%;\n`;\n\nconst ProjectTag = styled.span`\n  background-color: #2ac1bc;\n  padding: 2px 10px;\n  font-size: 12px;\n  color: white;\n  text-align: center;\n  margin-right: 10px;\n  border-radius: 15px;\n`;\n\nconst ProjectInfo = styled.span`\n  flex-basis: 20%;\n  align-items: middle;\n  color: #b1b1b1;\n  text-align: right;\n`;\n\nconst ProjectContent = styled.div`\n  padding-top: 50px;\n  margin-bottom: 30px;\n  display: grid;\n  grid-template-columns: 20% 80%;\n`;\n\nconst ProjectImg = styled.img``;\n\nconst ProjectAttr = styled.div`\n  font-size: 17px;\n  font-weight: 600;\n`;\n\nconst ProjectVal = styled.div`\n  font-size: 15px;\n  line-height: 24px;\n  text-align: justify;\n`;\nconst ProjectRoles = styled.span`\n  flex-basis: 80%;\n`;\n\nconst ProjectRole = styled.span`\n  background-color: #2ac1bc;\n  padding: 3px 16px;\n  font-size: 14px;\n  color: white;\n  text-align: center;\n  border-radius: 15px;\n`;\n\nconst ProjectRequire = styled.div`\n  font-size: 15px;\n  line-height: 24px;\n  margin-top: 20px;\n  margin-bottom: 50px;\n`;\n\nconst ProjectMembers = styled.div`\n  display: flex;\n  column-gap: 30px;\n`;\n\nconst ProjectMember = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n`;\n\nconst ProjectMemberImg = styled.div`\n  background-color: lightgray;\n  // background-image: url();\n  border-radius: 90px;\n  width: 80px;\n  height: 80px;\n`;\n\nconst ProjectLeaderName = styled.span`\n  font-size: 15px;\n  font-weight: 900;\n  color: #2ac1bc;\n  margin-top: 10px;\n`;\n\nconst ProjectMemberName = styled.span`\n  font-size: 15px;\n  margin-top: 10px;\n`;\n\nconst ProjectMemberRole = styled.span`\n  margin-top: 5px;\n  font-size: 12px;\n  color: #b1b1b1;\n`;\n\nconst ProjectApply = styled.textarea`\n  font-size: 16px;\n  width: 100%;\n  min-height: 90px;\n  padding: 10px 10px;\n  border: 1px solid #b1b1b1;\n  border-radius: 8px;\n  resize: none;\n  font: inherit;\n`;\n\nconst ProjectDetailPresenter = ({ title, content, requirements, leader, mates, status, createdAt, terminatedAt }) => (\n  <>\n    <ProjectSection>\n      <ProjectTitle>{title}</ProjectTitle>\n      <ProjectSub>\n        <ProjectTags>\n          {/* FIXME: 태그 없음 */}\n          {/* {tags && tags.length > 0 && tags.map((tag) => <ProjectTag> {tag} </ProjectTag>)} */}\n          <ProjectTag> #React </ProjectTag>\n          <ProjectTag> #NodeJS </ProjectTag>\n        </ProjectTags>\n        <ProjectInfo>\n          {\" \"}\n          {/* status 0: 모집중, status 1: 모집 완료, status 2: 프로젝트 종료 */}\n          {/* FIXME: 프로젝트 종료인 경우? */}\n          {createdAt} / {status ? \"모집중\" : \"모집완료\"}\n        </ProjectInfo>\n      </ProjectSub>\n      <Divider />\n\n      <ProjectContent>\n        <ProjectAttr> 프로젝트 소개 </ProjectAttr>\n        <ProjectVal> {content}</ProjectVal>\n      </ProjectContent>\n\n      <ProjectContent>\n        <ProjectAttr> 요구사항 </ProjectAttr>\n        <ProjectRoles>\n          <ProjectRole></ProjectRole>\n          {/* FIXME: requirements 없음 */}\n          {requirements && requirements.length > 0 && requirements.map((r) => <ProjectRole> {r.role} </ProjectRole>)}\n        </ProjectRoles>\n      </ProjectContent>\n\n      <ProjectContent>\n        <ProjectAttr>참가멤버</ProjectAttr>\n        <ProjectMembers>\n          <ProjectMember>\n            <ProjectMemberImg></ProjectMemberImg>\n            <ProjectLeaderName> 김가현 </ProjectLeaderName>\n            <ProjectMemberRole> 개발자 </ProjectMemberRole>\n          </ProjectMember>\n\n          <ProjectMember>\n            <ProjectMemberImg></ProjectMemberImg>\n            <ProjectMemberName> 김가현 </ProjectMemberName>\n            <ProjectMemberRole> 개발자 </ProjectMemberRole>\n          </ProjectMember>\n        </ProjectMembers>\n      </ProjectContent>\n\n      <Divider />\n      <ProjectContent>\n        <ProjectAttr> 참가신청</ProjectAttr>\n        <form>\n          <ProjectApply placeholder=\"자신을 간단하게 소개해보세요! 프로필과 함께 소개글이 프로젝트 리더에게 보내집니다. \" />\n        </form>\n      </ProjectContent>\n    </ProjectSection>\n  </>\n);\n\nexport default ProjectDetailPresenter;\n","/home/bstudent/dev/teamate-react/front/src/Components/DropdownMenu.js",[],{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","severity":1,"message":"196","line":1,"column":17,"nodeType":"197","messageId":"198","endLine":1,"endColumn":25},{"ruleId":"195","severity":1,"message":"199","line":15,"column":8,"nodeType":"197","messageId":"198","endLine":15,"endColumn":13},{"ruleId":"195","severity":1,"message":"200","line":3,"column":8,"nodeType":"197","messageId":"198","endLine":3,"endColumn":13},{"ruleId":"201","severity":1,"message":"202","line":16,"column":13,"nodeType":"203","endLine":32,"endColumn":4},{"ruleId":"195","severity":1,"message":"204","line":2,"column":18,"nodeType":"197","messageId":"198","endLine":2,"endColumn":27},{"ruleId":"205","severity":1,"message":"206","line":143,"column":24,"nodeType":"207","messageId":"208","endLine":143,"endColumn":59},{"ruleId":"195","severity":1,"message":"209","line":1,"column":17,"nodeType":"197","messageId":"198","endLine":1,"endColumn":26},{"ruleId":"201","severity":1,"message":"210","line":42,"column":6,"nodeType":"211","endLine":42,"endColumn":8,"suggestions":"212"},{"ruleId":"201","severity":1,"message":"213","line":49,"column":6,"nodeType":"211","endLine":49,"endColumn":16,"suggestions":"214"},{"ruleId":"195","severity":1,"message":"215","line":10,"column":16,"nodeType":"197","messageId":"198","endLine":10,"endColumn":23},{"ruleId":"201","severity":1,"message":"216","line":48,"column":6,"nodeType":"211","endLine":48,"endColumn":8,"suggestions":"217"},{"ruleId":"201","severity":1,"message":"213","line":53,"column":6,"nodeType":"211","endLine":53,"endColumn":13,"suggestions":"218"},{"ruleId":"195","severity":1,"message":"209","line":2,"column":17,"nodeType":"197","messageId":"198","endLine":2,"endColumn":26},{"ruleId":"195","severity":1,"message":"219","line":2,"column":8,"nodeType":"197","messageId":"198","endLine":2,"endColumn":17},{"ruleId":"195","severity":1,"message":"220","line":83,"column":9,"nodeType":"197","messageId":"198","endLine":83,"endColumn":26},{"ruleId":"191","replacedBy":"221"},{"ruleId":"193","replacedBy":"222"},{"ruleId":"195","severity":1,"message":"209","line":2,"column":17,"nodeType":"197","messageId":"198","endLine":2,"endColumn":26},{"ruleId":"195","severity":1,"message":"219","line":2,"column":8,"nodeType":"197","messageId":"198","endLine":2,"endColumn":17},{"ruleId":"195","severity":1,"message":"223","line":5,"column":8,"nodeType":"197","messageId":"198","endLine":5,"endColumn":25},{"ruleId":"195","severity":1,"message":"224","line":7,"column":7,"nodeType":"197","messageId":"198","endLine":7,"endColumn":16},{"ruleId":"195","severity":1,"message":"225","line":37,"column":7,"nodeType":"197","messageId":"198","endLine":37,"endColumn":12},{"ruleId":"226","severity":1,"message":"227","line":48,"column":17,"nodeType":"228","messageId":"229","endLine":48,"endColumn":19},{"ruleId":"201","severity":1,"message":"202","line":15,"column":13,"nodeType":"203","endLine":28,"endColumn":4},{"ruleId":"201","severity":1,"message":"230","line":28,"column":6,"nodeType":"211","endLine":28,"endColumn":8,"suggestions":"231"},{"ruleId":"195","severity":1,"message":"232","line":3,"column":8,"nodeType":"197","messageId":"198","endLine":3,"endColumn":14},{"ruleId":"195","severity":1,"message":"223","line":4,"column":8,"nodeType":"197","messageId":"198","endLine":4,"endColumn":25},{"ruleId":"195","severity":1,"message":"196","line":1,"column":17,"nodeType":"197","messageId":"198","endLine":1,"endColumn":25},{"ruleId":"201","severity":1,"message":"202","line":14,"column":13,"nodeType":"203","endLine":27,"endColumn":4},{"ruleId":"201","severity":1,"message":"230","line":27,"column":6,"nodeType":"211","endLine":27,"endColumn":8,"suggestions":"233"},{"ruleId":"195","severity":1,"message":"234","line":50,"column":7,"nodeType":"197","messageId":"198","endLine":50,"endColumn":17},{"ruleId":"195","severity":1,"message":"235","line":75,"column":7,"nodeType":"197","messageId":"198","endLine":75,"endColumn":21},"no-native-reassign",["236"],"no-negated-in-lhs",["237"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Login' is defined but never used.","'reset' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'keyframes' is defined but never used.","react/style-prop-object","Style prop value must be an object","JSXAttribute","stylePropNotObject","'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'getProjectsData'. Either include it or remove the dependency array.","ArrayExpression",["238"],"React Hook useEffect has a missing dependency: 'handleScroll'. Either include it or remove the dependency array.",["239"],"'setRole' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getMatesData'. Either include it or remove the dependency array.",["240"],["241"],"'PropTypes' is defined but never used.","'modalCloseHandler' is assigned a value but never used.",["236"],["237"],"'ProgressIndicator' is defined but never used.","'Container' is assigned a value but never used.","'Error' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["242"],"'Helmet' is defined but never used.",["243"],"'ProjectImg' is assigned a value but never used.","'ProjectRequire' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},{"desc":"252","fix":"254"},"Update the dependencies array to be: [getProjectsData]",{"range":"255","text":"256"},"Update the dependencies array to be: [handleScroll, projects]",{"range":"257","text":"258"},"Update the dependencies array to be: [getMatesData]",{"range":"259","text":"260"},"Update the dependencies array to be: [handleScroll, mates]",{"range":"261","text":"262"},"Update the dependencies array to be: [id]",{"range":"263","text":"264"},{"range":"265","text":"264"},[1208,1210],"[getProjectsData]",[1389,1399],"[handleScroll, projects]",[1403,1405],"[getMatesData]",[1556,1563],"[handleScroll, mates]",[633,635],"[id]",[675,677]]